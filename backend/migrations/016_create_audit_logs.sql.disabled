-- Create audit_logs table for tracking file activities
CREATE TABLE IF NOT EXISTS audit_logs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    action VARCHAR(50) NOT NULL, -- 'upload', 'download', 'delete', 'share', 'view', 'move', 'rename'
    resource_type VARCHAR(20) NOT NULL, -- 'file', 'folder'
    resource_id UUID, -- file_id or folder_id (nullable for bulk operations)
    resource_name VARCHAR(255), -- original filename or folder name for historical tracking
    details JSONB, -- additional metadata like file size, IP address, user agent, etc.
    ip_address INET,
    user_agent TEXT,
    status VARCHAR(20) DEFAULT 'success', -- 'success', 'failed', 'partial'
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for efficient querying
CREATE INDEX IF NOT EXISTS idx_audit_logs_user_id ON audit_logs(user_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_action ON audit_logs(action);
CREATE INDEX IF NOT EXISTS idx_audit_logs_resource_type ON audit_logs(resource_type);
CREATE INDEX IF NOT EXISTS idx_audit_logs_resource_id ON audit_logs(resource_id);
CREATE INDEX IF NOT EXISTS idx_audit_logs_created_at ON audit_logs(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_audit_logs_user_action ON audit_logs(user_id, action);
CREATE INDEX IF NOT EXISTS idx_audit_logs_resource ON audit_logs(resource_type, resource_id);

-- Add trigger to automatically update updated_at
CREATE OR REPLACE FUNCTION update_audit_logs_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_audit_logs_updated_at
    BEFORE UPDATE ON audit_logs
    FOR EACH ROW
    EXECUTE FUNCTION update_audit_logs_updated_at();

-- Add some sample audit log entries for testing
INSERT INTO audit_logs (user_id, action, resource_type, resource_id, resource_name, details, ip_address, user_agent, status) VALUES
    (
        (SELECT id FROM users WHERE email = 'thanush@gmail.com' LIMIT 1),
        'upload',
        'file',
        (SELECT id FROM files LIMIT 1),
        'sample-document.pdf',
        '{"file_size": 1048576, "mime_type": "application/pdf", "upload_duration_ms": 2500}',
        '127.0.0.1',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'success'
    ),
    (
        (SELECT id FROM users WHERE email = 'admin@gmail.com' LIMIT 1),
        'download',
        'file',
        (SELECT id FROM files LIMIT 1),
        'sample-document.pdf',
        '{"download_size": 1048576, "download_duration_ms": 850}',
        '192.168.1.100',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'success'
    );